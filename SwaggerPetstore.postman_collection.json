{
	"info": {
		"_postman_id": "1f3ad19a-a4f6-48bf-a5ab-b4096de03cce",
		"name": "Swagger Petstore",
		"description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\n\nContact Support:\n Email: apiteam@swagger.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39625541"
	},
	"item": [
		{
			"name": "pet",
			"item": [
				{
					"name": "petCreate",
					"item": [
						{
							"name": "Add a new pet to the store",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 (Created)\", function () {\r",
											"    pm.response.to.have.status(200);  \r",
											"});\r",
											"\r",
											"pm.test(\"Pet name is 'Fluffy'\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.name).to.eql(\"Fluffy\");  // Assert that the pet name is 'Fluffy'\r",
											"});\r",
											"// Extract the pet ID from the response\r",
											"var jsonData = pm.response.json();\r",
											"var petId = jsonData.id;\r",
											"\r",
											"\r",
											"pm.environment.set(\"petId\", petId);  \r",
											"pm.globals.set(\"petId\", petId); //set a global variable\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "read:pets write:pets",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://petstore.swagger.io/oauth/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 2,  // ID of the creating pet\n  \"name\": \"Fluffy\",\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"photoUrls\": [\n    \"http://example.com/photo.jpg\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"cute\"\n    }\n  ],\n  \"status\": \"available\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "petUpdate",
					"item": [
						{
							"name": "Update an existing pet",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);  // Checks that the status code is 200 (OK)\r",
											"});\r",
											"pm.test(\"Pet name is updated to 'Fluffy Updated'\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.name).to.eql(\"Fluffy Updated\");  //Expected to have name as Fluffy Updated\r",
											"    \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "read:pets write:pets",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://petstore.swagger.io/oauth/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": {{petId}},\n  \"name\": \"Fluffy Updated\",\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"photoUrls\": [\n    \"http://example.com/photo.jpg\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"cute\"\n    }\n  ],\n  \"status\": \"available\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": [
								{
									"name": "Invalid ID supplied",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pet not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Validation exception",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{petId}",
					"item": [
						{
							"name": "uploadImage",
							"item": [
								{
									"name": "DownloadImage",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"imageUrl\", \"https://raw.githubusercontent.com/silumi95/SwaggerAPI/7e7d865c6bc8d6b7d1a6d11072368c1b5973291a/Images/TestImage.jpg\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Content-Type is image/jpeg\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\", \"image/jpeg\");\r",
													"});\r",
													"pm.test(\"Content-Length is greater than 0\", function () {\r",
													"    pm.response.to.have.header(\"Content-Length\");\r",
													"    pm.expect(parseInt(pm.response.headers.get(\"Content-Length\"))).to.be.above(0);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://raw.githubusercontent.com/silumi95/SwaggerAPI/7e7d865c6bc8d6b7d1a6d11072368c1b5973291a/Images/TestImage.jpg",
											"protocol": "https",
											"host": [
												"raw",
												"githubusercontent",
												"com"
											],
											"path": [
												"silumi95",
												"SwaggerAPI",
												"7e7d865c6bc8d6b7d1a6d11072368c1b5973291a",
												"Images",
												"TestImage.jpg"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "uploads an image",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseBody = pm.response.json();\r",
											"\r",
											"// Assert that the status code is 200\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Check if the message contains 'File uploaded' (to ensure the file upload was successful)\r",
											"pm.test(\"Response contains 'File uploaded' in the message\", function () {\r",
											"    pm.expect(responseBody.message).to.include(\"File uploaded\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "read:pets write:pets",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://petstore.swagger.io/oauth/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "{{imageBase64}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/pet/{{petId}}/uploadImage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"{{petId}}",
										"uploadImage"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "additionalMetadata",
													"value": "<string>",
													"description": "Additional data to pass to server",
													"type": "text"
												},
												{
													"key": "file",
													"description": "file to upload",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/pet/:petId/uploadImage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId",
												"uploadImage"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Find pet by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);  \r",
											"    // Asserts that the status code is 200 OK\r",
											"});\r",
											"pm.test(\"Pet name is Fluffy Updated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.name).to.eql(\"Fluffy Updated\");  \r",
											"    // Asserts that the pet name in the response is \"Fluffy Updated\"\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/{{petId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"{{petId}}"
									]
								},
								"description": "Returns a single pet"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "api_key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}"
								},
								{
									"name": "Invalid ID supplied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "api_key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pet not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "api_key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updates a pet in the store with form data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);  // Assert the status is 200 OK\r",
											"});\r",
											"pm.test(\"Pet update was successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"2\");  // Ensure the pet ID is returned in the message\r",
											"});\r",
											"console.log(pm.response.json());  // Logs the entire response body\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "read:pets write:pets",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://petstore.swagger.io/oauth/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "cat test",
											"description": "Updated name of the pet"
										},
										{
											"key": "status",
											"value": "available",
											"description": "Updated status of the pet"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/pet/2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"2"
									]
								}
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "<string>",
													"description": "Updated name of the pet"
												},
												{
													"key": "status",
													"value": "<string>",
													"description": "Updated status of the pet"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes a pet",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);  // or pm.response.to.have.status(204); depending on the API's behavior\r",
											"});\r",
											"pm.test(\"Response message indicates success\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"2\");  // Adjusted to expect the returned ID (or success value)\r",
											"});\r",
											"\r",
											"console.log(pm.response.json());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "read:pets write:pets",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://petstore.swagger.io/oauth/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "api_key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"2"
									]
								}
							},
							"response": [
								{
									"name": "Invalid ID supplied",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "api_key",
												"value": "<string>"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pet not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "api_key",
												"value": "<string>"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "findByTags",
					"item": [
						{
							"name": "Finds Pets by tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response is an array\", function () {\r",
											"    const jsonResponse = pm.response.json();\r",
											"    pm.expect(jsonResponse).to.be.an('array');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "read:pets write:pets",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://petstore.swagger.io/oauth/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/findByTags?tags=<string>&tags=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByTags"
									],
									"query": [
										{
											"key": "tags",
											"value": "<string>",
											"description": "(Required) Tags to filter by"
										},
										{
											"key": "tags",
											"value": "<string>",
											"description": "(Required) Tags to filter by"
										}
									]
								},
								"description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/findByTags?tags=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByTags"
											],
											"query": [
												{
													"key": "tags",
													"value": "<string>",
													"description": "(Required) Tags to filter by"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"sold\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"available\"\n  }\n]"
								},
								{
									"name": "Invalid tag value",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/findByTags?tags=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByTags"
											],
											"query": [
												{
													"key": "tags",
													"value": "<string>",
													"description": "(Required) Tags to filter by"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "findByStatus",
					"item": [
						{
							"name": "Finds Pets by status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response is an array\", function () {\r",
											"    const jsonResponse = pm.response.json();\r",
											"    pm.expect(jsonResponse).to.be.an('array');\r",
											"});\r",
											"pm.test(\"Response contains at least one pet\", function () {\r",
											"    const jsonResponse = pm.response.json();\r",
											"    pm.expect(jsonResponse.length).to.be.above(0); // Check if the array has at least one element\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "read:pets write:pets",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://petstore.swagger.io/oauth/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByStatus"
									],
									"query": [
										{
											"key": "status",
											"value": "available",
											"description": "(Required) Status values that need to be considered for filter"
										},
										{
											"key": "status",
											"value": "available",
											"description": "(Required) Status values that need to be considered for filter"
										}
									]
								},
								"description": "Multiple status values can be provided with comma separated strings"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/findByStatus?status=available",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByStatus"
											],
											"query": [
												{
													"key": "status",
													"value": "available",
													"description": "(Required) Status values that need to be considered for filter"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"sold\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"available\"\n  }\n]"
								},
								{
									"name": "Invalid status value",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/findByStatus?status=available",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByStatus"
											],
											"query": [
												{
													"key": "status",
													"value": "available",
													"description": "(Required) Status values that need to be considered for filter"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://petstore.swagger.io/v2"
		}
	]
}